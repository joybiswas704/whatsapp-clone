{"version":3,"sources":["firebase.js","components/SidebarChat.js","StateProvider.js","components/Sidebar.js","components/Chat.js","reducer.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","addNewChat","name","id","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapShot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8e08af7.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyDy4ThKfrJFaZbapp5VPeMxcYZo1Z7g91c',\n\tauthDomain: 'whatsapp-clone-cc912.firebaseapp.com',\n\tprojectId: 'whatsapp-clone-cc912',\n\tstorageBucket: 'whatsapp-clone-cc912.appspot.com',\n\tmessagingSenderId: '168165478104',\n\tappId: '1:168165478104:web:c6fb3d8d4899e77f6c51ad',\n\tmeasurementId: 'G-JN0VMSG6WD',\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nconst auth = firebase.auth();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React, { useEffect, useState } from 'react';\nimport './SidebarChat.css';\nimport { Avatar } from '@material-ui/core';\nimport db from '../firebase';\nimport { Link } from 'react-router-dom';\n\nfunction SidebarChat({ addNewChat, name, id }) {\n\tconst [seed, setSeed] = useState('');\n\tconst [messages, setMessages] = useState('');\n\n\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(id)\n\t\t\t\t.collection('messages')\n\t\t\t\t.orderBy('timestamp', 'desc')\n\t\t\t\t.onSnapshot((snapShot) =>\n\t\t\t\t\tsetMessages(snapShot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tsetSeed(Math.floor(Math.random() * 5000));\n\t}, []);\n\n\tconst createChat = () => {\n\t\tconst roomName = prompt('Please enter the name for chat.');\n\n\t\tif (roomName) {\n\t\t\tdb.collection('rooms').add({\n\t\t\t\tname: roomName,\n\t\t\t});\n\t\t}\n\t};\n\n\treturn !addNewChat ? (\n\t\t<Link to={`/rooms/${id}`}>\n\t\t\t<div className='sidebarChat'>\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\t\t\t\t<div className='sidebarChat__info'>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<p>{messages[0]?.message}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t) : (\n\t\t<div onClick={createChat} className='sidebarChat'>\n\t\t\t<h2>Add new chat</h2>\n\t\t</div>\n\t);\n}\n\nexport default SidebarChat;\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\n\t\t{children}\n\t</StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport SidebarChat from './SidebarChat';\nimport db from '../firebase';\nimport { useStateValue } from '../StateProvider';\n\nfunction Sidebar() {\n\tconst [rooms, setRooms] = useState([]);\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\t// unsubscribe will detach from the firebase listener\n\t\tconst unsubscribe = db.collection('rooms').onSnapshot((snapShot) =>\n\t\t\tsetRooms(\n\t\t\t\tsnapShot.docs.map((doc) => ({\n\t\t\t\t\tid: doc.id,\n\t\t\t\t\tdata: doc.data(),\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className='sidebar'>\n\t\t\t<div className='sidebar__header'>\n\t\t\t\t<Avatar src={user?.photoURL} />\n\t\t\t\t<div className='sidebar__headerRight'>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<DonutLargeIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<ChatIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='sidebar__search'>\n\t\t\t\t<div className='sidebar__searchContainer'>\n\t\t\t\t\t<SearchOutlinedIcon />\n\t\t\t\t\t<input placeholder='Search or start new chat' type='text' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='sidebar__chats'>\n\t\t\t\t<SidebarChat addNewChat />\n\t\t\t\t{rooms.map((room) => (\n\t\t\t\t\t<SidebarChat key={room.id} id={room.id} name={room.data.name} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Sidebar;\n","import React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\nimport MoreVertOutlinedIcon from '@material-ui/icons/MoreVertOutlined';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport db from '../firebase';\nimport { useStateValue } from '../StateProvider';\nimport firebase from 'firebase';\n\nfunction Chat() {\n\tconst [seed, setSeed] = useState('');\n\tconst [input, setInput] = useState('');\n\tconst { roomId } = useParams();\n\tconst [roomName, setRoomName] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\tconst [{ user }, dispatch] = useStateValue();\n\n\tuseEffect(() => {\n\t\tif (roomId) {\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.onSnapshot((snapShot) => setRoomName(snapShot.data().name));\n\n\t\t\tdb.collection('rooms')\n\t\t\t\t.doc(roomId)\n\t\t\t\t.collection('messages')\n\t\t\t\t.orderBy('timestamp', 'asc')\n\t\t\t\t.onSnapshot((snapShot) =>\n\t\t\t\t\tsetMessages(snapShot.docs.map((doc) => doc.data()))\n\t\t\t\t);\n\t\t}\n\t}, [roomId]);\n\n\tuseEffect(() => {\n\t\tsetSeed(Math.floor(Math.random() * 5000));\n\t}, [roomId]);\n\n\tconst sendMessage = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(input);\n\t\tdb.collection('rooms').doc(roomId).collection('messages').add({\n\t\t\tmessage: input,\n\t\t\tname: user.displayName,\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t});\n\t\tsetInput('');\n\t};\n\treturn (\n\t\t<div className='chat'>\n\t\t\t<div className='chat__header'>\n\t\t\t\t<Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n\t\t\t\t<div className='chat__headerInfo'>\n\t\t\t\t\t<h3>{roomName}</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLast seen{' '}\n\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\tmessages[messages.length - 1]?.timestamp?.toDate()\n\t\t\t\t\t\t).toUTCString()}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='chat__headerRight'>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<SearchOutlinedIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<AttachFileOutlinedIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t<MoreVertOutlinedIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='chat__body'>\n\t\t\t\t{messages.map((message) => (\n\t\t\t\t\t<p\n\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\tclassName={`chat__message ${\n\t\t\t\t\t\t\tmessage.name === user.displayName && 'chat__reciever'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className='chat__name'>{message.name}</span>\n\t\t\t\t\t\t{message.message}\n\t\t\t\t\t\t<span className='chat__timestamp'>\n\t\t\t\t\t\t\t{new Date(message.timestamp?.toDate()).toUTCString()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className='chat__footer'>\n\t\t\t\t<InsertEmoticonIcon />\n\t\t\t\t<form>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type a message'\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='submit' onClick={sendMessage}>\n\t\t\t\t\t\tSend a message\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t<MicIcon />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Chat;\n","export const initialState = {\n\tuser: null,\n};\n\nexport const actionTypes = {\n\tSET_USER: 'SET_USER',\n};\n\nconst reducer = (state, action) => {\n\tconsole.log(action);\n\tswitch (action.type) {\n\t\tcase actionTypes.SET_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;\n","import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport { auth, provider } from '../firebase';\nimport { useStateValue } from '../StateProvider';\nimport { actionTypes } from '../reducer';\n\nfunction Login() {\n\tconst [{}, dispatch] = useStateValue();\n\tconst signIn = () => {\n\t\tauth\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then((result) =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: actionTypes.SET_USER,\n\t\t\t\t\tuser: result.user,\n\t\t\t\t})\n\t\t\t)\n\t\t\t.catch((error) => alert(error.message));\n\t};\n\treturn (\n\t\t<div className='login'>\n\t\t\t<div className='login__container'>\n\t\t\t\t<img\n\t\t\t\t\tsrc='https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1196px-WhatsApp.svg.png'\n\t\t\t\t\talt='WhatsApp'\n\t\t\t\t/>\n\t\t\t\t<div className='login__text'>\n\t\t\t\t\t<h1>Sign in to whatsApp</h1>\n\t\t\t\t</div>\n\t\t\t\t<Button onClick={signIn}>Sign In With Google</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\tconst [{ user }, dispatch] = useStateValue();\n\treturn (\n\t\t// BEM naming convention\n\t\t<div className='App'>\n\t\t\t{!user ? (\n\t\t\t\t<Login />\n\t\t\t) : (\n\t\t\t\t<div className='app__body'>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/rooms/:roomId'>\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider initialState={initialState} reducer={reducer}>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}